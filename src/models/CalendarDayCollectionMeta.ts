/* tslint:disable */
/* eslint-disable */
/**
 * Aryeo
 * # Introduction The Aryeo API provides access to the Aryeo platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: jarrodp@zillowgroup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Metadata about a calendar day paginated response.
 * @export
 * @interface CalendarDayCollectionMeta
 */
export interface CalendarDayCollectionMeta {
    /**
     * The ID of the group.
     * @type {string}
     * @memberof CalendarDayCollectionMeta
     */
    groupId?: string | null;
    /**
     * The ID of the group (company).
     * @type {string}
     * @memberof CalendarDayCollectionMeta
     */
    companyId?: string;
    /**
     * Array of company team member IDs.
     * @type {Array<string>}
     * @memberof CalendarDayCollectionMeta
     */
    companyTeamMemberIds?: Array<string>;
    /**
     * Array of user IDs.
     * @type {Array<string>}
     * @memberof CalendarDayCollectionMeta
     */
    userIds?: Array<string>;
    /**
     * ID of the appointment that is scheduled to service this order item. UUID Version 4.
     * @type {string}
     * @memberof CalendarDayCollectionMeta
     */
    appointmentId?: string | null;
    /**
     * Range start time.
     * @type {Date}
     * @memberof CalendarDayCollectionMeta
     */
    startAt?: Date | null;
    /**
     * Range end time.
     * @type {Date}
     * @memberof CalendarDayCollectionMeta
     */
    endAt?: Date | null;
    /**
     * The timezone.
     * @type {string}
     * @memberof CalendarDayCollectionMeta
     */
    timezone?: string | null;
    /**
     * Is twlight?
     * @type {boolean}
     * @memberof CalendarDayCollectionMeta
     */
    isTwilight?: boolean | null;
    /**
     * Interval length.
     * @type {number}
     * @memberof CalendarDayCollectionMeta
     */
    interval?: number | null;
    /**
     * Duration length.
     * @type {number}
     * @memberof CalendarDayCollectionMeta
     */
    duration?: number | null;
    /**
     * The current page.
     * @type {number}
     * @memberof CalendarDayCollectionMeta
     */
    currentPage: number;
    /**
     * Timeframe.
     * @type {string}
     * @memberof CalendarDayCollectionMeta
     */
    timeframe?: string | null;
}

/**
 * Check if a given object implements the CalendarDayCollectionMeta interface.
 */
export function instanceOfCalendarDayCollectionMeta(value: object): value is CalendarDayCollectionMeta {
    if (!('currentPage' in value) || value['currentPage'] === undefined) return false;
    return true;
}

export function CalendarDayCollectionMetaFromJSON(json: any): CalendarDayCollectionMeta {
    return CalendarDayCollectionMetaFromJSONTyped(json, false);
}

export function CalendarDayCollectionMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): CalendarDayCollectionMeta {
    if (json == null) {
        return json;
    }
    return {
        
        'groupId': json['group_id'] == null ? undefined : json['group_id'],
        'companyId': json['company_id'] == null ? undefined : json['company_id'],
        'companyTeamMemberIds': json['company_team_member_ids'] == null ? undefined : json['company_team_member_ids'],
        'userIds': json['user_ids'] == null ? undefined : json['user_ids'],
        'appointmentId': json['appointment_id'] == null ? undefined : json['appointment_id'],
        'startAt': json['start_at'] == null ? undefined : (new Date(json['start_at'])),
        'endAt': json['end_at'] == null ? undefined : (new Date(json['end_at'])),
        'timezone': json['timezone'] == null ? undefined : json['timezone'],
        'isTwilight': json['is_twilight'] == null ? undefined : json['is_twilight'],
        'interval': json['interval'] == null ? undefined : json['interval'],
        'duration': json['duration'] == null ? undefined : json['duration'],
        'currentPage': json['current_page'],
        'timeframe': json['timeframe'] == null ? undefined : json['timeframe'],
    };
}

export function CalendarDayCollectionMetaToJSON(json: any): CalendarDayCollectionMeta {
    return CalendarDayCollectionMetaToJSONTyped(json, false);
}

export function CalendarDayCollectionMetaToJSONTyped(value?: CalendarDayCollectionMeta | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'group_id': value['groupId'],
        'company_id': value['companyId'],
        'company_team_member_ids': value['companyTeamMemberIds'],
        'user_ids': value['userIds'],
        'appointment_id': value['appointmentId'],
        'start_at': value['startAt'] == null ? undefined : ((value['startAt'] as any).toISOString()),
        'end_at': value['endAt'] == null ? undefined : ((value['endAt'] as any).toISOString()),
        'timezone': value['timezone'],
        'is_twilight': value['isTwilight'],
        'interval': value['interval'],
        'duration': value['duration'],
        'current_page': value['currentPage'],
        'timeframe': value['timeframe'],
    };
}

