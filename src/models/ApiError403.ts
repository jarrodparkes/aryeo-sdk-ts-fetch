/* tslint:disable */
/* eslint-disable */
/**
 * Aryeo
 * # Introduction The Aryeo API provides access to the Aryeo platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: jarrodp@zillowgroup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * A forbidden error returned by the API.
 * @export
 * @interface ApiError403
 */
export interface ApiError403 {
    /**
     * What was the state of the request?
     * @type {string}
     * @memberof ApiError403
     */
    status: string;
    /**
     * The error message.
     * @type {string}
     * @memberof ApiError403
     */
    message: string;
    /**
     * A numeric code corresponding to the error.
     * @type {number}
     * @memberof ApiError403
     */
    code?: number | null;
}

/**
 * Check if a given object implements the ApiError403 interface.
 */
export function instanceOfApiError403(value: object): value is ApiError403 {
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    return true;
}

export function ApiError403FromJSON(json: any): ApiError403 {
    return ApiError403FromJSONTyped(json, false);
}

export function ApiError403FromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiError403 {
    if (json == null) {
        return json;
    }
    return {
        
        'status': json['status'],
        'message': json['message'],
        'code': json['code'] == null ? undefined : json['code'],
    };
}

export function ApiError403ToJSON(json: any): ApiError403 {
    return ApiError403ToJSONTyped(json, false);
}

export function ApiError403ToJSONTyped(value?: ApiError403 | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': value['status'],
        'message': value['message'],
        'code': value['code'],
    };
}

