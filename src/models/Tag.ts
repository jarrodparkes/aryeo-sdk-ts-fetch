/* tslint:disable */
/* eslint-disable */
/**
 * Aryeo
 * # Introduction The Aryeo API provides access to the Aryeo platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: jarrodp@zillowgroup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * A label attached to something for the purpose of identification or categorization.
 * @export
 * @interface Tag
 */
export interface Tag {
    /**
     * ID. UUID Version 4.
     * @type {string}
     * @memberof Tag
     */
    id: string;
    /**
     * The name of the tag.
     * @type {string}
     * @memberof Tag
     */
    name: string;
    /**
     * The slug of the tag.
     * @type {string}
     * @memberof Tag
     */
    slug: string;
    /**
     * The background color of the tag.
     * @type {string}
     * @memberof Tag
     */
    color: string;
    /**
     * The font color of the tag.
     * @type {string}
     * @memberof Tag
     */
    fontColor: string;
}

/**
 * Check if a given object implements the Tag interface.
 */
export function instanceOfTag(value: object): value is Tag {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('slug' in value) || value['slug'] === undefined) return false;
    if (!('color' in value) || value['color'] === undefined) return false;
    if (!('fontColor' in value) || value['fontColor'] === undefined) return false;
    return true;
}

export function TagFromJSON(json: any): Tag {
    return TagFromJSONTyped(json, false);
}

export function TagFromJSONTyped(json: any, ignoreDiscriminator: boolean): Tag {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'slug': json['slug'],
        'color': json['color'],
        'fontColor': json['font_color'],
    };
}

export function TagToJSON(json: any): Tag {
    return TagToJSONTyped(json, false);
}

export function TagToJSONTyped(value?: Tag | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'slug': value['slug'],
        'color': value['color'],
        'font_color': value['fontColor'],
    };
}

