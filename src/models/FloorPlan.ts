/* tslint:disable */
/* eslint-disable */
/**
 * Aryeo
 * # Introduction The Aryeo API provides access to the Aryeo platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: jarrodp@zillowgroup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * A scale diagram of the arrangement of a building.
 * @export
 * @interface FloorPlan
 */
export interface FloorPlan {
    /**
     * ID of the floor plan. UUID Version 4.
     * @type {string}
     * @memberof FloorPlan
     */
    id: string;
    /**
     * A URL for the original, full-resolution version of the floor plan. Useful for downloading.
     * @type {string}
     * @memberof FloorPlan
     */
    originalUrl: string;
    /**
     * A URL for a large version of the floor plan.
     * @type {string}
     * @memberof FloorPlan
     */
    largeUrl: string;
    /**
     * A URL for a thumbnail-sized version of the floor plan.
     * @type {string}
     * @memberof FloorPlan
     */
    thumbnailUrl: string;
    /**
     * The title (or caption) of the floor plan.
     * @type {string}
     * @memberof FloorPlan
     */
    title?: string | null;
    /**
     * Index order position of the floor plan.
     * @type {number}
     * @memberof FloorPlan
     */
    index?: number | null;
}

/**
 * Check if a given object implements the FloorPlan interface.
 */
export function instanceOfFloorPlan(value: object): value is FloorPlan {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('originalUrl' in value) || value['originalUrl'] === undefined) return false;
    if (!('largeUrl' in value) || value['largeUrl'] === undefined) return false;
    if (!('thumbnailUrl' in value) || value['thumbnailUrl'] === undefined) return false;
    return true;
}

export function FloorPlanFromJSON(json: any): FloorPlan {
    return FloorPlanFromJSONTyped(json, false);
}

export function FloorPlanFromJSONTyped(json: any, ignoreDiscriminator: boolean): FloorPlan {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'originalUrl': json['original_url'],
        'largeUrl': json['large_url'],
        'thumbnailUrl': json['thumbnail_url'],
        'title': json['title'] == null ? undefined : json['title'],
        'index': json['index'] == null ? undefined : json['index'],
    };
}

export function FloorPlanToJSON(json: any): FloorPlan {
    return FloorPlanToJSONTyped(json, false);
}

export function FloorPlanToJSONTyped(value?: FloorPlan | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'original_url': value['originalUrl'],
        'large_url': value['largeUrl'],
        'thumbnail_url': value['thumbnailUrl'],
        'title': value['title'],
        'index': value['index'],
    };
}

