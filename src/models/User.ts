/* tslint:disable */
/* eslint-disable */
/**
 * Aryeo
 * # Introduction The Aryeo API provides access to the Aryeo platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: jarrodp@zillowgroup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { SsoUser } from './SsoUser';
import {
    SsoUserFromJSON,
    SsoUserToJSON
} from './SsoUser';

/**
 * A record of a person on the Aryeo platform.
 * @export
 * @interface User
 */
export interface User {
    /**
     * ID of the user. UUID Version 4.
     * @type {string}
     * @memberof User
     */
    id: string;
    /**
     * Email address of the user.
     * @type {string}
     * @memberof User
     */
    email: string;
    /**
     * First name of the user.
     * @type {string}
     * @memberof User
     */
    firstName?: string | null;
    /**
     * Last name of the user.
     * @type {string}
     * @memberof User
     */
    lastName?: string | null;
    /**
     * A phone number represented in whichever standards specified by the user, typically ###-###-#### (separated by hyphens).
     * @type {string}
     * @memberof User
     */
    phone?: string | null;
    /**
     * The avatar image URL of a user.
     * @type {string}
     * @memberof User
     */
    avatarUrl?: string | null;
    /**
     * Describes user's relationship (access level) to a specified group. Only returned if this resource is returned as a sub-resource of a group.
     * @type {string}
     * @memberof User
     */
    relationship?: string | null;
    /**
     * The list of SSO users associated with this user.
     * @type {Array<SsoUser>}
     * @memberof User
     */
    ssoUsers?: Array<SsoUser>;
}

/**
 * Check if a given object implements the User interface.
 */
export function instanceOfUser(value: object): value is User {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    return true;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'email': json['email'],
        'firstName': json['first_name'] == null ? undefined : json['first_name'],
        'lastName': json['last_name'] == null ? undefined : json['last_name'],
        'phone': json['phone'] == null ? undefined : json['phone'],
        'avatarUrl': json['avatar_url'] == null ? undefined : json['avatar_url'],
        'relationship': json['relationship'] == null ? undefined : json['relationship'],
        'ssoUsers': json['sso_users'] == null ? undefined : ((json['sso_users'] as Array<any>).map(SsoUserFromJSON)),
    };
}

export function UserToJSON(json: any): User {
    return UserToJSONTyped(json, false);
}

export function UserToJSONTyped(value?: User | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'email': value['email'],
        'first_name': value['firstName'],
        'last_name': value['lastName'],
        'phone': value['phone'],
        'avatar_url': value['avatarUrl'],
        'relationship': value['relationship'],
        'sso_users': value['ssoUsers'] == null ? undefined : ((value['ssoUsers'] as Array<any>).map(SsoUserToJSON)),
    };
}

