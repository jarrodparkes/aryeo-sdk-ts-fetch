/* tslint:disable */
/* eslint-disable */
/**
 * Aryeo
 * # Introduction The Aryeo API provides access to the Aryeo platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: jarrodp@zillowgroup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Payload for updating an appointment record.
 * @export
 * @interface AppointmentUpdatePutPayload
 */
export interface AppointmentUpdatePutPayload {
    /**
     * The new date and time (ISO 8601 format) when the appointment is set to start.
     * @type {Date}
     * @memberof AppointmentUpdatePutPayload
     */
    startAt?: Date | null;
    /**
     * The new date and time (ISO 8601 format) when the appointment is set to end.
     * @type {Date}
     * @memberof AppointmentUpdatePutPayload
     */
    endAt?: Date | null;
    /**
     * Array of user IDs to attach to the appointment.
     * @type {Array<string>}
     * @memberof AppointmentUpdatePutPayload
     */
    userIds?: Array<string>;
    /**
     * Array of order item IDs to attach to the appointment.
     * @type {Array<string>}
     * @memberof AppointmentUpdatePutPayload
     */
    itemIds?: Array<string>;
    /**
     * Sends a notification to the appointment's order's customer that the appointment was canceled.
     * @type {boolean}
     * @memberof AppointmentUpdatePutPayload
     */
    notify?: boolean | null;
}

/**
 * Check if a given object implements the AppointmentUpdatePutPayload interface.
 */
export function instanceOfAppointmentUpdatePutPayload(value: object): value is AppointmentUpdatePutPayload {
    return true;
}

export function AppointmentUpdatePutPayloadFromJSON(json: any): AppointmentUpdatePutPayload {
    return AppointmentUpdatePutPayloadFromJSONTyped(json, false);
}

export function AppointmentUpdatePutPayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): AppointmentUpdatePutPayload {
    if (json == null) {
        return json;
    }
    return {
        
        'startAt': json['start_at'] == null ? undefined : (new Date(json['start_at'])),
        'endAt': json['end_at'] == null ? undefined : (new Date(json['end_at'])),
        'userIds': json['user_ids'] == null ? undefined : json['user_ids'],
        'itemIds': json['item_ids'] == null ? undefined : json['item_ids'],
        'notify': json['notify'] == null ? undefined : json['notify'],
    };
}

export function AppointmentUpdatePutPayloadToJSON(json: any): AppointmentUpdatePutPayload {
    return AppointmentUpdatePutPayloadToJSONTyped(json, false);
}

export function AppointmentUpdatePutPayloadToJSONTyped(value?: AppointmentUpdatePutPayload | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'start_at': value['startAt'] == null ? undefined : ((value['startAt'] as any).toISOString()),
        'end_at': value['endAt'] == null ? undefined : ((value['endAt'] as any).toISOString()),
        'user_ids': value['userIds'],
        'item_ids': value['itemIds'],
        'notify': value['notify'],
    };
}

