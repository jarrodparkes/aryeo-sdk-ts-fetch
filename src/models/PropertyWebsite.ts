/* tslint:disable */
/* eslint-disable */
/**
 * Aryeo
 * # Introduction The Aryeo API provides access to the Aryeo platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: jarrodp@zillowgroup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Website (in branded and unbranded versions) that displays information about a property.
 * @export
 * @interface PropertyWebsite
 */
export interface PropertyWebsite {
    /**
     * ID of the website. UUID Version 4.
     * @type {string}
     * @memberof PropertyWebsite
     */
    id: string;
    /**
     * URL for branded version of website.
     * @type {string}
     * @memberof PropertyWebsite
     */
    brandedUrl: string;
    /**
     * URL for unbranded version of website.
     * @type {string}
     * @memberof PropertyWebsite
     */
    unbrandedUrl: string;
}

/**
 * Check if a given object implements the PropertyWebsite interface.
 */
export function instanceOfPropertyWebsite(value: object): value is PropertyWebsite {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('brandedUrl' in value) || value['brandedUrl'] === undefined) return false;
    if (!('unbrandedUrl' in value) || value['unbrandedUrl'] === undefined) return false;
    return true;
}

export function PropertyWebsiteFromJSON(json: any): PropertyWebsite {
    return PropertyWebsiteFromJSONTyped(json, false);
}

export function PropertyWebsiteFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertyWebsite {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'brandedUrl': json['branded_url'],
        'unbrandedUrl': json['unbranded_url'],
    };
}

export function PropertyWebsiteToJSON(json: any): PropertyWebsite {
    return PropertyWebsiteToJSONTyped(json, false);
}

export function PropertyWebsiteToJSONTyped(value?: PropertyWebsite | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'branded_url': value['brandedUrl'],
        'unbranded_url': value['unbrandedUrl'],
    };
}

