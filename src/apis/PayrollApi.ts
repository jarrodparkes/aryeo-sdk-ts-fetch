/* tslint:disable */
/* eslint-disable */
/**
 * Aryeo
 * # Introduction The Aryeo API provides access to the Aryeo platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: jarrodp@zillowgroup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';

export interface PayrollPayRunItemsPayRunItemDeleteRequest {
    payRunItem: string;
}

export interface PayrollPayRunItemsPayRunItemPutRequest {
    payRunItem: string;
}

export interface PayrollPayRunsPayRunItemsAddPostRequest {
    payRun: string;
}

export interface PayrollPayRunsPayRunItemsRemovePostRequest {
    payRun: string;
}

/**
 * 
 */
export class PayrollApi extends runtime.BaseAPI {

    /**
     * billing-setup-intents-post
     */
    async billingSetupIntentsPostRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/billing/setup-intents`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * billing-setup-intents-post
     */
    async billingSetupIntentsPost(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.billingSetupIntentsPostRaw(initOverrides);
        return await response.value();
    }

    /**
     * payroll-pay-run-items-get
     */
    async payrollPayRunItemsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/payroll/pay-run-items`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * payroll-pay-run-items-get
     */
    async payrollPayRunItemsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.payrollPayRunItemsGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * payroll-pay-run-items-pay-run-item-delete
     */
    async payrollPayRunItemsPayRunItemDeleteRaw(requestParameters: PayrollPayRunItemsPayRunItemDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters['payRunItem'] == null) {
            throw new runtime.RequiredError(
                'payRunItem',
                'Required parameter "payRunItem" was null or undefined when calling payrollPayRunItemsPayRunItemDelete().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/payroll/pay-run-items/{pay_run_item}`.replace(`{${"pay_run_item"}}`, encodeURIComponent(String(requestParameters['payRunItem']))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * payroll-pay-run-items-pay-run-item-delete
     */
    async payrollPayRunItemsPayRunItemDelete(requestParameters: PayrollPayRunItemsPayRunItemDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.payrollPayRunItemsPayRunItemDeleteRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * payroll-pay-run-items-pay-run-item-put
     */
    async payrollPayRunItemsPayRunItemPutRaw(requestParameters: PayrollPayRunItemsPayRunItemPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters['payRunItem'] == null) {
            throw new runtime.RequiredError(
                'payRunItem',
                'Required parameter "payRunItem" was null or undefined when calling payrollPayRunItemsPayRunItemPut().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/payroll/pay-run-items/{pay_run_item}`.replace(`{${"pay_run_item"}}`, encodeURIComponent(String(requestParameters['payRunItem']))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * payroll-pay-run-items-pay-run-item-put
     */
    async payrollPayRunItemsPayRunItemPut(requestParameters: PayrollPayRunItemsPayRunItemPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.payrollPayRunItemsPayRunItemPutRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * payroll-pay-run-items-post
     */
    async payrollPayRunItemsPostRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/payroll/pay-run-items`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * payroll-pay-run-items-post
     */
    async payrollPayRunItemsPost(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.payrollPayRunItemsPostRaw(initOverrides);
        return await response.value();
    }

    /**
     * payroll-pay-runs-pay-run-items-add-post
     */
    async payrollPayRunsPayRunItemsAddPostRaw(requestParameters: PayrollPayRunsPayRunItemsAddPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters['payRun'] == null) {
            throw new runtime.RequiredError(
                'payRun',
                'Required parameter "payRun" was null or undefined when calling payrollPayRunsPayRunItemsAddPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/payroll/pay-runs/{pay_run}/items/add`.replace(`{${"pay_run"}}`, encodeURIComponent(String(requestParameters['payRun']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * payroll-pay-runs-pay-run-items-add-post
     */
    async payrollPayRunsPayRunItemsAddPost(requestParameters: PayrollPayRunsPayRunItemsAddPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.payrollPayRunsPayRunItemsAddPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * payroll-pay-runs-pay-run-items-remove-post
     */
    async payrollPayRunsPayRunItemsRemovePostRaw(requestParameters: PayrollPayRunsPayRunItemsRemovePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters['payRun'] == null) {
            throw new runtime.RequiredError(
                'payRun',
                'Required parameter "payRun" was null or undefined when calling payrollPayRunsPayRunItemsRemovePost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/payroll/pay-runs/{pay_run}/items/remove`.replace(`{${"pay_run"}}`, encodeURIComponent(String(requestParameters['payRun']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * payroll-pay-runs-pay-run-items-remove-post
     */
    async payrollPayRunsPayRunItemsRemovePost(requestParameters: PayrollPayRunsPayRunItemsRemovePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.payrollPayRunsPayRunItemsRemovePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
