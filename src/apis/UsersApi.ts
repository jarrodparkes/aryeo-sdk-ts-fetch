/* tslint:disable */
/* eslint-disable */
/**
 * Aryeo
 * # Introduction The Aryeo API provides access to the Aryeo platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: jarrodp@zillowgroup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';

export interface CompanyTeamMembersCompanyTeamMemberIdEventsGetRequest {
    companyTeamMemberId: string;
}

export interface CompanyTeamMembersCompanyTeamMemberIdGetRequest {
    companyTeamMemberId: string;
}

export interface CustomerTeamMembersCustomerTeamMemberIdGetRequest {
    customerTeamMemberId: string;
}

export interface CustomerTeamsCustomerTeamIdMembershipsGetRequest {
    customerTeamId: string;
}

/**
 * 
 */
export class UsersApi extends runtime.BaseAPI {

    /**
     * company-team-members-company-team-member-id-events-get
     */
    async companyTeamMembersCompanyTeamMemberIdEventsGetRaw(requestParameters: CompanyTeamMembersCompanyTeamMemberIdEventsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters['companyTeamMemberId'] == null) {
            throw new runtime.RequiredError(
                'companyTeamMemberId',
                'Required parameter "companyTeamMemberId" was null or undefined when calling companyTeamMembersCompanyTeamMemberIdEventsGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/company-team-members/{company_team_member_id}/events`.replace(`{${"company_team_member_id"}}`, encodeURIComponent(String(requestParameters['companyTeamMemberId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * company-team-members-company-team-member-id-events-get
     */
    async companyTeamMembersCompanyTeamMemberIdEventsGet(requestParameters: CompanyTeamMembersCompanyTeamMemberIdEventsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.companyTeamMembersCompanyTeamMemberIdEventsGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * company-team-members-company-team-member-id-get
     */
    async companyTeamMembersCompanyTeamMemberIdGetRaw(requestParameters: CompanyTeamMembersCompanyTeamMemberIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters['companyTeamMemberId'] == null) {
            throw new runtime.RequiredError(
                'companyTeamMemberId',
                'Required parameter "companyTeamMemberId" was null or undefined when calling companyTeamMembersCompanyTeamMemberIdGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/company-team-members/{company_team_member_id}`.replace(`{${"company_team_member_id"}}`, encodeURIComponent(String(requestParameters['companyTeamMemberId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * company-team-members-company-team-member-id-get
     */
    async companyTeamMembersCompanyTeamMemberIdGet(requestParameters: CompanyTeamMembersCompanyTeamMemberIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.companyTeamMembersCompanyTeamMemberIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * company-team-members-get
     */
    async companyTeamMembersGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/company-team-members`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * company-team-members-get
     */
    async companyTeamMembersGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.companyTeamMembersGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * customer-team-members-customer-team-member-id-get
     */
    async customerTeamMembersCustomerTeamMemberIdGetRaw(requestParameters: CustomerTeamMembersCustomerTeamMemberIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters['customerTeamMemberId'] == null) {
            throw new runtime.RequiredError(
                'customerTeamMemberId',
                'Required parameter "customerTeamMemberId" was null or undefined when calling customerTeamMembersCustomerTeamMemberIdGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/customer-team-members/{customer_team_member_id}`.replace(`{${"customer_team_member_id"}}`, encodeURIComponent(String(requestParameters['customerTeamMemberId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * customer-team-members-customer-team-member-id-get
     */
    async customerTeamMembersCustomerTeamMemberIdGet(requestParameters: CustomerTeamMembersCustomerTeamMemberIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.customerTeamMembersCustomerTeamMemberIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * customer-teams-affiliate-memberships-post
     */
    async customerTeamsAffiliateMembershipsPostRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/customer-teams/affiliate-memberships`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * customer-teams-affiliate-memberships-post
     */
    async customerTeamsAffiliateMembershipsPost(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.customerTeamsAffiliateMembershipsPostRaw(initOverrides);
        return await response.value();
    }

    /**
     * customer-teams-customer-team-id-memberships-get
     */
    async customerTeamsCustomerTeamIdMembershipsGetRaw(requestParameters: CustomerTeamsCustomerTeamIdMembershipsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters['customerTeamId'] == null) {
            throw new runtime.RequiredError(
                'customerTeamId',
                'Required parameter "customerTeamId" was null or undefined when calling customerTeamsCustomerTeamIdMembershipsGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/customer-teams/{customer_team_id}/memberships`.replace(`{${"customer_team_id"}}`, encodeURIComponent(String(requestParameters['customerTeamId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * customer-teams-customer-team-id-memberships-get
     */
    async customerTeamsCustomerTeamIdMembershipsGet(requestParameters: CustomerTeamsCustomerTeamIdMembershipsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.customerTeamsCustomerTeamIdMembershipsGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * customer-users-get
     */
    async customerUsersGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/customer-users`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * customer-users-get
     */
    async customerUsersGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.customerUsersGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * customer-users-post
     */
    async customerUsersPostRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/customer-users`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * customer-users-post
     */
    async customerUsersPost(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.customerUsersPostRaw(initOverrides);
        return await response.value();
    }

    /**
     * customers-get
     */
    async customersGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/customers`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * customers-get
     */
    async customersGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.customersGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * customers-post
     */
    async customersPostRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/customers`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * customers-post
     */
    async customersPost(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.customersPostRaw(initOverrides);
        return await response.value();
    }

}
