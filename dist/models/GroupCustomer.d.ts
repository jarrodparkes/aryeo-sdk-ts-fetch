/**
 * Aryeo
 * # Introduction The Aryeo API provides access to the Aryeo platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: jarrodp@zillowgroup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { OrderForm } from './OrderForm';
import type { User } from './User';
/**
 * A collection of users that can interact with the Aryeo platform. Permissions and properties are determined based on the group's type which can be creator, agent, or brokerage.
 * @export
 * @interface GroupCustomer
 */
export interface GroupCustomer {
    /**
     * String representing the objectâ€™s type. Objects of the same type share the same schema.
     * @type {string}
     * @memberof GroupCustomer
     */
    object?: string;
    /**
     * ID of the group. UUID Version 4.
     * @type {string}
     * @memberof GroupCustomer
     */
    id: string;
    /**
     * The type of the group. Can be CREATOR, AGENT, or BROKERAGE, and may dictate the attributes of the group returned.
     * @type {string}
     * @memberof GroupCustomer
     */
    type: GroupCustomerTypeEnum;
    /**
     * The name of the group.
     * @type {string}
     * @memberof GroupCustomer
     */
    name: string;
    /**
     * The email address of a group.
     * @type {string}
     * @memberof GroupCustomer
     */
    email?: string | null;
    /**
     * A phone number represented in whichever standards specified by the group, typically ###-###-#### (separated by hyphens).
     * @type {string}
     * @memberof GroupCustomer
     */
    phone?: string | null;
    /**
     * The website URL of a group.
     * @type {string}
     * @memberof GroupCustomer
     */
    websiteUrl?: string | null;
    /**
     * The logo URL of a group.
     * @type {string}
     * @memberof GroupCustomer
     */
    logoUrl?: string | null;
    /**
     * The name of the brokerage or team of a real estate agent. Only returned if group's type is AGENT.
     * @type {string}
     * @memberof GroupCustomer
     */
    officeName?: string | null;
    /**
     * The license number of a real estate agent. Only returned if group's type is AGENT.
     * @type {string}
     * @memberof GroupCustomer
     */
    licenseNumber?: string | null;
    /**
     * The default timezone for the group.
     * @type {string}
     * @memberof GroupCustomer
     */
    timezone?: string;
    /**
     * The default currency for the group.
     * @type {string}
     * @memberof GroupCustomer
     */
    currency?: GroupCustomerCurrencyEnum;
    /**
     * The slug for the group.
     * @type {string}
     * @memberof GroupCustomer
     */
    slug?: string | null;
    /**
     * The order page URL for the group.
     * @type {string}
     * @memberof GroupCustomer
     */
    orderPageUrl?: string | null;
    /**
     * The background color for the order page (has a hex value) for the group.
     * @type {string}
     * @memberof GroupCustomer
     */
    orderPageBackgroundColor?: string | null;
    /**
     *
     * @type {OrderForm}
     * @memberof GroupCustomer
     */
    defaultOrderForm?: OrderForm;
    /**
     * Indicates if the order form by default uses territories to filter available users and products.
     * @type {boolean}
     * @memberof GroupCustomer
     */
    useTerritoryAwareness?: boolean | null;
    /**
     * The scheduling style the order form should use for timeslot selection by default.
     * @type {string}
     * @memberof GroupCustomer
     */
    availabilityStyle?: GroupCustomerAvailabilityStyleEnum | null;
    /**
     * How frequently slotted available times are on the order form by default.
     * @type {number}
     * @memberof GroupCustomer
     */
    slotIntervalMinutes?: number | null;
    /**
     * Indicates if the order form uses auto-assignment of users to appointments.
     * @type {boolean}
     * @memberof GroupCustomer
     */
    useAutomatedUserAssignment?: boolean | null;
    /**
     * The default assignment strategy the order form should use to assign users to appointments, if applicable.
     * @type {string}
     * @memberof GroupCustomer
     */
    automatedUserAssignmentStrategy?: GroupCustomerAutomatedUserAssignmentStrategyEnum | null;
    /**
     * Indicates if the order form by default should display user's names after they have been assigned to an appointment.
     * @type {boolean}
     * @memberof GroupCustomer
     */
    showUserNames?: boolean | null;
    /**
     * Indicates if the order form by default instantly schedules appointments as soon as the order is placed.
     * @type {boolean}
     * @memberof GroupCustomer
     */
    useInstantAppointmentScheduling?: boolean | null;
    /**
     * An array of order forms a vendor group provides for placing orders. Only returned if group's type is CREATOR.
     * @type {Array<OrderForm>}
     * @memberof GroupCustomer
     */
    orderForms?: Array<OrderForm> | null;
    /**
     * The Aryeo users associated with this group.
     * @type {Array<User>}
     * @memberof GroupCustomer
     */
    users?: Array<User> | null;
}
/**
 * @export
 */
export declare const GroupCustomerTypeEnum: {
    readonly Creator: "CREATOR";
    readonly Agent: "AGENT";
    readonly Brokerage: "BROKERAGE";
};
export type GroupCustomerTypeEnum = typeof GroupCustomerTypeEnum[keyof typeof GroupCustomerTypeEnum];
/**
 * @export
 */
export declare const GroupCustomerCurrencyEnum: {
    readonly Usd: "USD";
    readonly Cad: "CAD";
    readonly Gbp: "GBP";
    readonly Chf: "CHF";
    readonly Eur: "EUR";
    readonly Aud: "AUD";
    readonly Nzd: "NZD";
    readonly Zar: "ZAR";
    readonly Dkk: "DKK";
};
export type GroupCustomerCurrencyEnum = typeof GroupCustomerCurrencyEnum[keyof typeof GroupCustomerCurrencyEnum];
/**
 * @export
 */
export declare const GroupCustomerAvailabilityStyleEnum: {
    readonly Time: "TIME";
    readonly TimeOfDay: "TIME_OF_DAY";
    readonly Legacy: "LEGACY";
};
export type GroupCustomerAvailabilityStyleEnum = typeof GroupCustomerAvailabilityStyleEnum[keyof typeof GroupCustomerAvailabilityStyleEnum];
/**
 * @export
 */
export declare const GroupCustomerAutomatedUserAssignmentStrategyEnum: {
    readonly Recommended: "RECOMMENDED";
    readonly HoursPriority: "HOURS_PRIORITY";
    readonly Distance: "DISTANCE";
    readonly RoundRobin: "ROUND_ROBIN";
    readonly PriorityList: "PRIORITY_LIST";
};
export type GroupCustomerAutomatedUserAssignmentStrategyEnum = typeof GroupCustomerAutomatedUserAssignmentStrategyEnum[keyof typeof GroupCustomerAutomatedUserAssignmentStrategyEnum];
/**
 * Check if a given object implements the GroupCustomer interface.
 */
export declare function instanceOfGroupCustomer(value: object): value is GroupCustomer;
export declare function GroupCustomerFromJSON(json: any): GroupCustomer;
export declare function GroupCustomerFromJSONTyped(json: any, ignoreDiscriminator: boolean): GroupCustomer;
export declare function GroupCustomerToJSON(json: any): GroupCustomer;
export declare function GroupCustomerToJSONTyped(value?: GroupCustomer | null, ignoreDiscriminator?: boolean): any;
