"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Aryeo
 * # Introduction The Aryeo API provides access to the Aryeo platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: jarrodp@zillowgroup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AppointmentPreferredStartAtTimeOfDayEnum = exports.AppointmentPreferenceTypeEnum = exports.AppointmentStatusEnum = void 0;
exports.instanceOfAppointment = instanceOfAppointment;
exports.AppointmentFromJSON = AppointmentFromJSON;
exports.AppointmentFromJSONTyped = AppointmentFromJSONTyped;
exports.AppointmentToJSON = AppointmentToJSON;
exports.AppointmentToJSONTyped = AppointmentToJSONTyped;
const Order_1 = require("./Order");
const OrderItem_1 = require("./OrderItem");
const User_1 = require("./User");
/**
 * @export
 */
exports.AppointmentStatusEnum = {
    Scheduled: 'SCHEDULED',
    Unscheduled: 'UNSCHEDULED',
    Canceled: 'CANCELED'
};
/**
 * @export
 */
exports.AppointmentPreferenceTypeEnum = {
    Asap: 'ASAP',
    Time: 'TIME',
    TimeOfDay: 'TIME_OF_DAY',
    None: 'NONE'
};
/**
 * @export
 */
exports.AppointmentPreferredStartAtTimeOfDayEnum = {
    Morning: 'MORNING',
    Midday: 'MIDDAY',
    Afternoon: 'AFTERNOON',
    Twilight: 'TWILIGHT'
};
/**
 * Check if a given object implements the Appointment interface.
 */
function instanceOfAppointment(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    return true;
}
function AppointmentFromJSON(json) {
    return AppointmentFromJSONTyped(json, false);
}
function AppointmentFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'status': json['status'] == null ? undefined : json['status'],
        'title': json['title'] == null ? undefined : json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'startAt': json['start_at'] == null ? undefined : (new Date(json['start_at'])),
        'endAt': json['end_at'] == null ? undefined : (new Date(json['end_at'])),
        'rescheduledAt': json['rescheduled_at'] == null ? undefined : (new Date(json['rescheduled_at'])),
        'postponedAt': json['postponed_at'] == null ? undefined : (new Date(json['postponed_at'])),
        'previousStartAt': json['previous_start_at'] == null ? undefined : (new Date(json['previous_start_at'])),
        'preferenceType': json['preference_type'] == null ? undefined : json['preference_type'],
        'preferredStartAt': json['preferred_start_at'] == null ? undefined : (new Date(json['preferred_start_at'])),
        'preferredStartAtDay': json['preferred_start_at_day'] == null ? undefined : (new Date(json['preferred_start_at_day'])),
        'preferredStartAtTimeOfDay': json['preferred_start_at_time_of_day'] == null ? undefined : json['preferred_start_at_time_of_day'],
        'duration': json['duration'] == null ? undefined : json['duration'],
        'userHasAppointmentsManagePermission': json['user_has_appointments_manage_permission'] == null ? undefined : json['user_has_appointments_manage_permission'],
        'order': json['order'] == null ? undefined : (0, Order_1.OrderFromJSON)(json['order']),
        'users': json['users'] == null ? undefined : (json['users'].map(User_1.UserFromJSON)),
        'items': json['items'] == null ? undefined : (json['items'].map(OrderItem_1.OrderItemFromJSON)),
        'canCancel': json['can_cancel'] == null ? undefined : json['can_cancel'],
        'canReschedule': json['can_reschedule'] == null ? undefined : json['can_reschedule'],
        'isWithinCancellationLockPeriod': json['is_within_cancellation_lock_period'] == null ? undefined : json['is_within_cancellation_lock_period'],
        'isWithinReschedulingLockPeriod': json['is_within_rescheduling_lock_period'] == null ? undefined : json['is_within_rescheduling_lock_period'],
        'deletedAt': json['deleted_at'] == null ? undefined : (new Date(json['deleted_at'])),
    };
}
function AppointmentToJSON(json) {
    return AppointmentToJSONTyped(json, false);
}
function AppointmentToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'status': value['status'],
        'title': value['title'],
        'description': value['description'],
        'start_at': value['startAt'] == null ? undefined : (value['startAt'].toISOString()),
        'end_at': value['endAt'] == null ? undefined : (value['endAt'].toISOString()),
        'rescheduled_at': value['rescheduledAt'] == null ? undefined : (value['rescheduledAt'].toISOString()),
        'postponed_at': value['postponedAt'] == null ? undefined : (value['postponedAt'].toISOString()),
        'previous_start_at': value['previousStartAt'] == null ? undefined : (value['previousStartAt'].toISOString()),
        'preference_type': value['preferenceType'],
        'preferred_start_at': value['preferredStartAt'] == null ? undefined : (value['preferredStartAt'].toISOString()),
        'preferred_start_at_day': value['preferredStartAtDay'] == null ? undefined : (value['preferredStartAtDay'].toISOString().substring(0, 10)),
        'preferred_start_at_time_of_day': value['preferredStartAtTimeOfDay'],
        'duration': value['duration'],
        'user_has_appointments_manage_permission': value['userHasAppointmentsManagePermission'],
        'order': (0, Order_1.OrderToJSON)(value['order']),
        'users': value['users'] == null ? undefined : (value['users'].map(User_1.UserToJSON)),
        'items': value['items'] == null ? undefined : (value['items'].map(OrderItem_1.OrderItemToJSON)),
        'can_cancel': value['canCancel'],
        'can_reschedule': value['canReschedule'],
        'is_within_cancellation_lock_period': value['isWithinCancellationLockPeriod'],
        'is_within_rescheduling_lock_period': value['isWithinReschedulingLockPeriod'],
        'deleted_at': value['deletedAt'] == null ? undefined : (value['deletedAt'].toISOString()),
    };
}
