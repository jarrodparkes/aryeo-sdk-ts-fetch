/**
 * Aryeo
 * # Introduction The Aryeo API provides access to the Aryeo platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: jarrodp@zillowgroup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Order } from './Order';
import type { OrderItem } from './OrderItem';
import type { User } from './User';
/**
 * An appointment.
 * @export
 * @interface Appointment
 */
export interface Appointment {
    /**
     * ID of the appointment. UUID Version 4.
     * @type {string}
     * @memberof Appointment
     */
    id: string;
    /**
     * The status of the appointment.
     * @type {string}
     * @memberof Appointment
     */
    status?: AppointmentStatusEnum | null;
    /**
     * The title of the appointment.
     * @type {string}
     * @memberof Appointment
     */
    title?: string | null;
    /**
     * The multi-line description of the appointment.
     * @type {string}
     * @memberof Appointment
     */
    description?: string | null;
    /**
     * The date and time (ISO 8601 format) when the appointment is set to start.
     * @type {Date}
     * @memberof Appointment
     */
    startAt?: Date | null;
    /**
     * The date and time (ISO 8601 format) when the appointment is set to end.
     * @type {Date}
     * @memberof Appointment
     */
    endAt?: Date | null;
    /**
     * The date and time (ISO 8601 format) when the appointment was rescheduled.
     * @type {Date}
     * @memberof Appointment
     */
    rescheduledAt?: Date | null;
    /**
     * The date and time (ISO 8601 format) when the appointment was postponed.
     * @type {Date}
     * @memberof Appointment
     */
    postponedAt?: Date | null;
    /**
     * The date and time (ISO 8601 format) when the appointment was previously scheduled for.
     * @type {Date}
     * @memberof Appointment
     */
    previousStartAt?: Date | null;
    /**
     * The type of preferred scheduling information provided by a customer to aid in scheduling this appointment.
     * @type {string}
     * @memberof Appointment
     */
    preferenceType?: AppointmentPreferenceTypeEnum | null;
    /**
     * A preferred date and time (ISO 8601 format) for when the appointment could start. Only returned if unconfirmed appointment's preference type is TIME.
     * @type {Date}
     * @memberof Appointment
     */
    preferredStartAt?: Date | null;
    /**
     * A preferred date (ISO 8601 format) for when the appointment could start. Only returned if unconfirmed appointment's preference type is TIME_OF_DAY.
     * @type {Date}
     * @memberof Appointment
     */
    preferredStartAtDay?: Date | null;
    /**
     * A preferred time of day for when the appointment could start. Only returned if unconfirmed appointment's preference type is TIME_OF_DAY.
     * @type {string}
     * @memberof Appointment
     */
    preferredStartAtTimeOfDay?: AppointmentPreferredStartAtTimeOfDayEnum | null;
    /**
     * The length of the appointment in minutes.
     * @type {number}
     * @memberof Appointment
     */
    duration?: number | null;
    /**
     * Does the authorized user have the availability to manage this appointment?
     * @type {boolean}
     * @memberof Appointment
     */
    userHasAppointmentsManagePermission?: boolean;
    /**
     *
     * @type {Order}
     * @memberof Appointment
     */
    order?: Order;
    /**
     * Users attached to the appointment.
     * @type {Array<User>}
     * @memberof Appointment
     */
    users?: Array<User> | null;
    /**
     * Items attached to the appointment.
     * @type {Array<OrderItem>}
     * @memberof Appointment
     */
    items?: Array<OrderItem>;
    /**
     * Indicates if the request user can cancel the appointment.
     * @type {boolean}
     * @memberof Appointment
     */
    canCancel?: boolean | null;
    /**
     * Indicates if the request user can reschedule the appointment.
     * @type {boolean}
     * @memberof Appointment
     */
    canReschedule?: boolean | null;
    /**
     * Indicates if the appointment is within the cancellation lock period.
     * @type {boolean}
     * @memberof Appointment
     */
    isWithinCancellationLockPeriod?: boolean | null;
    /**
     * Indicates if the appointment is within the cancellation lock period.
     * @type {boolean}
     * @memberof Appointment
     */
    isWithinReschedulingLockPeriod?: boolean | null;
    /**
     * A deleted date and time (ISO 8601 format) for when we use a filter to get changed appointments.
     * @type {Date}
     * @memberof Appointment
     */
    deletedAt?: Date | null;
}
/**
 * @export
 */
export declare const AppointmentStatusEnum: {
    readonly Scheduled: "SCHEDULED";
    readonly Unscheduled: "UNSCHEDULED";
    readonly Canceled: "CANCELED";
};
export type AppointmentStatusEnum = typeof AppointmentStatusEnum[keyof typeof AppointmentStatusEnum];
/**
 * @export
 */
export declare const AppointmentPreferenceTypeEnum: {
    readonly Asap: "ASAP";
    readonly Time: "TIME";
    readonly TimeOfDay: "TIME_OF_DAY";
    readonly None: "NONE";
};
export type AppointmentPreferenceTypeEnum = typeof AppointmentPreferenceTypeEnum[keyof typeof AppointmentPreferenceTypeEnum];
/**
 * @export
 */
export declare const AppointmentPreferredStartAtTimeOfDayEnum: {
    readonly Morning: "MORNING";
    readonly Midday: "MIDDAY";
    readonly Afternoon: "AFTERNOON";
    readonly Twilight: "TWILIGHT";
};
export type AppointmentPreferredStartAtTimeOfDayEnum = typeof AppointmentPreferredStartAtTimeOfDayEnum[keyof typeof AppointmentPreferredStartAtTimeOfDayEnum];
/**
 * Check if a given object implements the Appointment interface.
 */
export declare function instanceOfAppointment(value: object): value is Appointment;
export declare function AppointmentFromJSON(json: any): Appointment;
export declare function AppointmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Appointment;
export declare function AppointmentToJSON(json: any): Appointment;
export declare function AppointmentToJSONTyped(value?: Appointment | null, ignoreDiscriminator?: boolean): any;
