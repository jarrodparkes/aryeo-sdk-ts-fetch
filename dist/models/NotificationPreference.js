"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Aryeo
 * # Introduction The Aryeo API provides access to the Aryeo platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: jarrodp@zillowgroup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.NotificationPreferenceNotificationTypeEnum = void 0;
exports.instanceOfNotificationPreference = instanceOfNotificationPreference;
exports.NotificationPreferenceFromJSON = NotificationPreferenceFromJSON;
exports.NotificationPreferenceFromJSONTyped = NotificationPreferenceFromJSONTyped;
exports.NotificationPreferenceToJSON = NotificationPreferenceToJSON;
exports.NotificationPreferenceToJSONTyped = NotificationPreferenceToJSONTyped;
/**
 * @export
 */
exports.NotificationPreferenceNotificationTypeEnum = {
    CreatorOrderReceived: 'CREATOR_ORDER_RECEIVED',
    CreatorOrderPaymentProcessed: 'CREATOR_ORDER_PAYMENT_PROCESSED',
    CreatorAppointmentScheduled: 'CREATOR_APPOINTMENT_SCHEDULED',
    CreatorAppointmentRescheduled: 'CREATOR_APPOINTMENT_RESCHEDULED',
    CreatorAppointmentCanceled: 'CREATOR_APPOINTMENT_CANCELED',
    CreatorAppointmentPostponed: 'CREATOR_APPOINTMENT_POSTPONED',
    CreatorAppointmentAssigned: 'CREATOR_APPOINTMENT_ASSIGNED',
    CreatorAppointmentUnassigned: 'CREATOR_APPOINTMENT_UNASSIGNED',
    CreatorAppointmentReminder: 'CREATOR_APPOINTMENT_REMINDER',
    CreatorUpcomingAppointmentsSummary: 'CREATOR_UPCOMING_APPOINTMENTS_SUMMARY',
    CreatorExportReady: 'CREATOR_EXPORT_READY',
    CreatorCustomerTeamInvitation: 'CREATOR_CUSTOMER_TEAM_INVITATION',
    CreatorTeamMemberInvitation: 'CREATOR_TEAM_MEMBER_INVITATION',
    ListingDelivery: 'LISTING_DELIVERY',
    CustomerOrderConfirmation: 'CUSTOMER_ORDER_CONFIRMATION',
    CustomerOrderPaymentRequired: 'CUSTOMER_ORDER_PAYMENT_REQUIRED',
    CustomerAppointmentScheduled: 'CUSTOMER_APPOINTMENT_SCHEDULED',
    CustomerAppointmentRescheduled: 'CUSTOMER_APPOINTMENT_RESCHEDULED',
    CustomerAppointmentCanceled: 'CUSTOMER_APPOINTMENT_CANCELED',
    CustomerAppointmentPostponed: 'CUSTOMER_APPOINTMENT_POSTPONED',
    CustomerAppointmentReminder: 'CUSTOMER_APPOINTMENT_REMINDER',
    CustomerNewLead: 'CUSTOMER_NEW_LEAD',
    CustomerUserVerification: 'CUSTOMER_USER_VERIFICATION',
    CustomerUserResetPassword: 'CUSTOMER_USER_RESET_PASSWORD',
    CustomerUserActivation: 'CUSTOMER_USER_ACTIVATION',
    PortalCustom: 'PORTAL_CUSTOM'
};
/**
 * Check if a given object implements the NotificationPreference interface.
 */
function instanceOfNotificationPreference(value) {
    return true;
}
function NotificationPreferenceFromJSON(json) {
    return NotificationPreferenceFromJSONTyped(json, false);
}
function NotificationPreferenceFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'notificationType': json['notification_type'] == null ? undefined : json['notification_type'],
        'push': json['push'] == null ? undefined : json['push'],
        'sms': json['sms'] == null ? undefined : json['sms'],
        'inApp': json['in_app'] == null ? undefined : json['in_app'],
        'email': json['email'] == null ? undefined : json['email'],
    };
}
function NotificationPreferenceToJSON(json) {
    return NotificationPreferenceToJSONTyped(json, false);
}
function NotificationPreferenceToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'notification_type': value['notificationType'],
        'push': value['push'],
        'sms': value['sms'],
        'in_app': value['inApp'],
        'email': value['email'],
    };
}
