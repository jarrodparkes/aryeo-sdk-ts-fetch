"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Aryeo
 * # Introduction The Aryeo API provides access to the Aryeo platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: jarrodp@zillowgroup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.OrderCurrencyEnum = exports.OrderPaymentStatusEnum = exports.OrderFulfillmentStatusEnum = exports.OrderOrderStatusEnum = exports.OrderStatusEnum = void 0;
exports.instanceOfOrder = instanceOfOrder;
exports.OrderFromJSON = OrderFromJSON;
exports.OrderFromJSONTyped = OrderFromJSONTyped;
exports.OrderToJSON = OrderToJSON;
exports.OrderToJSONTyped = OrderToJSONTyped;
const Address_1 = require("./Address");
const Appointment_1 = require("./Appointment");
const CustomerGroup_1 = require("./CustomerGroup");
const Discount_1 = require("./Discount");
const Group_1 = require("./Group");
const Listing_1 = require("./Listing");
const OrderForm_1 = require("./OrderForm");
const OrderItem_1 = require("./OrderItem");
const Tag_1 = require("./Tag");
/**
 * @export
 */
exports.OrderStatusEnum = {
    Confirmed: 'CONFIRMED',
    Ghost: 'GHOST'
};
/**
 * @export
 */
exports.OrderOrderStatusEnum = {
    Draft: 'DRAFT',
    Open: 'OPEN',
    Canceled: 'CANCELED'
};
/**
 * @export
 */
exports.OrderFulfillmentStatusEnum = {
    Fulfilled: 'FULFILLED',
    Unfulfilled: 'UNFULFILLED'
};
/**
 * @export
 */
exports.OrderPaymentStatusEnum = {
    Paid: 'PAID',
    PartiallyPaid: 'PARTIALLY_PAID',
    Unpaid: 'UNPAID'
};
/**
 * @export
 */
exports.OrderCurrencyEnum = {
    Usd: 'USD',
    Cad: 'CAD',
    Gbp: 'GBP',
    Chf: 'CHF',
    Eur: 'EUR',
    Aud: 'AUD',
    Nzd: 'NZD',
    Zar: 'ZAR'
};
/**
 * Check if a given object implements the Order interface.
 */
function instanceOfOrder(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('title' in value) || value['title'] === undefined)
        return false;
    if (!('fulfillmentStatus' in value) || value['fulfillmentStatus'] === undefined)
        return false;
    if (!('paymentStatus' in value) || value['paymentStatus'] === undefined)
        return false;
    if (!('statusUrl' in value) || value['statusUrl'] === undefined)
        return false;
    if (!('downloadsAllowed' in value) || value['downloadsAllowed'] === undefined)
        return false;
    if (!('paymentsAllowed' in value) || value['paymentsAllowed'] === undefined)
        return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined)
        return false;
    return true;
}
function OrderFromJSON(json) {
    return OrderFromJSONTyped(json, false);
}
function OrderFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'number': json['number'] == null ? undefined : json['number'],
        'title': json['title'],
        'status': json['status'] == null ? undefined : json['status'],
        'orderStatus': json['order_status'] == null ? undefined : json['order_status'],
        'fulfillmentStatus': json['fulfillment_status'],
        'paymentStatus': json['payment_status'],
        'internalNotes': json['internal_notes'] == null ? undefined : json['internal_notes'],
        'currency': json['currency'] == null ? undefined : json['currency'],
        'totalAmount': json['total_amount'] == null ? undefined : json['total_amount'],
        'paymentUrl': json['payment_url'] == null ? undefined : json['payment_url'],
        'statusUrl': json['status_url'],
        'invoiceUrl': json['invoice_url'] == null ? undefined : json['invoice_url'],
        'downloadsAllowed': json['downloads_allowed'],
        'paymentsAllowed': json['payments_allowed'],
        'address': json['address'] == null ? undefined : (0, Address_1.AddressFromJSON)(json['address']),
        'customer': json['customer'] == null ? undefined : (0, Group_1.GroupFromJSON)(json['customer']),
        'customerGroup': json['customer_group'] == null ? undefined : (0, CustomerGroup_1.CustomerGroupFromJSON)(json['customer_group']),
        'listing': json['listing'] == null ? undefined : (0, Listing_1.ListingFromJSON)(json['listing']),
        'orderForm': json['order_form'] == null ? undefined : (0, OrderForm_1.OrderFormFromJSON)(json['order_form']),
        'discounts': json['discounts'] == null ? undefined : (json['discounts'].map(Discount_1.DiscountFromJSON)),
        'tags': json['tags'] == null ? undefined : (json['tags'].map(Tag_1.TagFromJSON)),
        'items': json['items'] == null ? undefined : (json['items'].map(OrderItem_1.OrderItemFromJSON)),
        'appointments': json['appointments'] == null ? undefined : (json['appointments'].map(Appointment_1.AppointmentFromJSON)),
        'unconfirmedAppointments': json['unconfirmed_appointments'] == null ? undefined : (json['unconfirmed_appointments'].map(Appointment_1.AppointmentFromJSON)),
        'createdAt': (json['created_at'] == null ? null : new Date(json['created_at'])),
        'updatedAt': (json['updated_at'] == null ? null : new Date(json['updated_at'])),
    };
}
function OrderToJSON(json) {
    return OrderToJSONTyped(json, false);
}
function OrderToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'number': value['number'],
        'title': value['title'],
        'status': value['status'],
        'order_status': value['orderStatus'],
        'fulfillment_status': value['fulfillmentStatus'],
        'payment_status': value['paymentStatus'],
        'internal_notes': value['internalNotes'],
        'currency': value['currency'],
        'total_amount': value['totalAmount'],
        'payment_url': value['paymentUrl'],
        'status_url': value['statusUrl'],
        'invoice_url': value['invoiceUrl'],
        'downloads_allowed': value['downloadsAllowed'],
        'payments_allowed': value['paymentsAllowed'],
        'address': (0, Address_1.AddressToJSON)(value['address']),
        'customer': (0, Group_1.GroupToJSON)(value['customer']),
        'customer_group': (0, CustomerGroup_1.CustomerGroupToJSON)(value['customerGroup']),
        'listing': (0, Listing_1.ListingToJSON)(value['listing']),
        'order_form': (0, OrderForm_1.OrderFormToJSON)(value['orderForm']),
        'discounts': value['discounts'] == null ? undefined : (value['discounts'].map(Discount_1.DiscountToJSON)),
        'tags': value['tags'] == null ? undefined : (value['tags'].map(Tag_1.TagToJSON)),
        'items': value['items'] == null ? undefined : (value['items'].map(OrderItem_1.OrderItemToJSON)),
        'appointments': value['appointments'] == null ? undefined : (value['appointments'].map(Appointment_1.AppointmentToJSON)),
        'unconfirmed_appointments': value['unconfirmedAppointments'] == null ? undefined : (value['unconfirmedAppointments'].map(Appointment_1.AppointmentToJSON)),
        'created_at': (value['createdAt'] == null ? null : value['createdAt'].toISOString()),
        'updated_at': (value['updatedAt'] == null ? null : value['updatedAt'].toISOString()),
    };
}
