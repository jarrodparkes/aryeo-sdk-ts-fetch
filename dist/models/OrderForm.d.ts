/**
 * Aryeo
 * # Introduction The Aryeo API provides access to the Aryeo platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: jarrodp@zillowgroup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * An order form is a form that is used to submit an order.
 * @export
 * @interface OrderForm
 */
export interface OrderForm {
    /**
     * ID of the order form. UUID Version 4.
     * @type {string}
     * @memberof OrderForm
     */
    id: string;
    /**
     * The title or name of the order form.
     * @type {string}
     * @memberof OrderForm
     */
    title: string;
    /**
     * The type of the order form, indicating whether the order form is an Aryeo order form or that of another scheduling service provider.
     * @type {string}
     * @memberof OrderForm
     */
    type: OrderFormTypeEnum;
    /**
     * A URL of a publicly-accessible webpage for this order form.
     * @type {string}
     * @memberof OrderForm
     */
    url: string;
    /**
     * Indicates if the order form is uses territories to filter available users and products.
     * @type {boolean}
     * @memberof OrderForm
     */
    useTerritoryAwareness?: boolean;
    /**
     * The scheduling style the order form should use to for timeslot selection.
     * @type {string}
     * @memberof OrderForm
     */
    availabilityStyle?: OrderFormAvailabilityStyleEnum;
    /**
     * How frequently slotted available times are on the order form.
     * @type {number}
     * @memberof OrderForm
     */
    slotIntervalMinutes?: number;
    /**
     * Indicates if the order form users auto-assignment of users to appointments.
     * @type {boolean}
     * @memberof OrderForm
     */
    useAutomatedUserAssignment?: boolean;
    /**
     * The assignment strategy the order form should use to assign users to appointments, if applicable.
     * @type {string}
     * @memberof OrderForm
     */
    automatedUserAssignmentStrategy?: OrderFormAutomatedUserAssignmentStrategyEnum;
    /**
     * Indicates if the order form should display user's names after they have been assigned to an appointment.
     * @type {boolean}
     * @memberof OrderForm
     */
    showUserNames?: boolean;
    /**
     * Indicates if the order form requires an upfront payment to place the order.
     * @type {boolean}
     * @memberof OrderForm
     */
    requireUpfrontPayment?: boolean;
    /**
     * The percentage of the order form's total price that should be paid upfront.
     * @type {number}
     * @memberof OrderForm
     */
    upfrontPaymentPercentage?: number | null;
    /**
     * Indicates if the order form instantly schedules appointments as soon as the order is placed.
     * @type {boolean}
     * @memberof OrderForm
     */
    useInstantAppointmentScheduling?: boolean;
}
/**
 * @export
 */
export declare const OrderFormTypeEnum: {
    readonly Aryeo: "ARYEO";
    readonly External: "EXTERNAL";
};
export type OrderFormTypeEnum = typeof OrderFormTypeEnum[keyof typeof OrderFormTypeEnum];
/**
 * @export
 */
export declare const OrderFormAvailabilityStyleEnum: {
    readonly Time: "TIME";
    readonly TimeOfDay: "TIME_OF_DAY";
    readonly Legacy: "LEGACY";
};
export type OrderFormAvailabilityStyleEnum = typeof OrderFormAvailabilityStyleEnum[keyof typeof OrderFormAvailabilityStyleEnum];
/**
 * @export
 */
export declare const OrderFormAutomatedUserAssignmentStrategyEnum: {
    readonly Recommended: "RECOMMENDED";
    readonly HoursPriority: "HOURS_PRIORITY";
    readonly Distance: "DISTANCE";
    readonly RoundRobin: "ROUND_ROBIN";
    readonly PriorityList: "PRIORITY_LIST";
};
export type OrderFormAutomatedUserAssignmentStrategyEnum = typeof OrderFormAutomatedUserAssignmentStrategyEnum[keyof typeof OrderFormAutomatedUserAssignmentStrategyEnum];
/**
 * Check if a given object implements the OrderForm interface.
 */
export declare function instanceOfOrderForm(value: object): value is OrderForm;
export declare function OrderFormFromJSON(json: any): OrderForm;
export declare function OrderFormFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderForm;
export declare function OrderFormToJSON(json: any): OrderForm;
export declare function OrderFormToJSONTyped(value?: OrderForm | null, ignoreDiscriminator?: boolean): any;
