"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Aryeo
 * # Introduction The Aryeo API provides access to the Aryeo platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: jarrodp@zillowgroup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TagsApi = void 0;
const runtime = require("../runtime");
/**
 *
 */
class TagsApi extends runtime.BaseAPI {
    /**
     * customer-teams-customer-team-id-tags-post
     */
    customerTeamsCustomerTeamIdTagsPostRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['customerTeamId'] == null) {
                throw new runtime.RequiredError('customerTeamId', 'Required parameter "customerTeamId" was null or undefined when calling customerTeamsCustomerTeamIdTagsPost().');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/customer-teams/{customer_team_id}/tags`.replace(`{${"customer_team_id"}}`, encodeURIComponent(String(requestParameters['customerTeamId']))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * customer-teams-customer-team-id-tags-post
     */
    customerTeamsCustomerTeamIdTagsPost(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.customerTeamsCustomerTeamIdTagsPostRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * customer-teams-customer-team-id-tags-put
     */
    customerTeamsCustomerTeamIdTagsPutRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['customerTeamId'] == null) {
                throw new runtime.RequiredError('customerTeamId', 'Required parameter "customerTeamId" was null or undefined when calling customerTeamsCustomerTeamIdTagsPut().');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/customer-teams/{customer_team_id}/tags`.replace(`{${"customer_team_id"}}`, encodeURIComponent(String(requestParameters['customerTeamId']))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * customer-teams-customer-team-id-tags-put
     */
    customerTeamsCustomerTeamIdTagsPut(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.customerTeamsCustomerTeamIdTagsPutRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * customer-teams-customer-team-id-tags-tag-id-delete
     */
    customerTeamsCustomerTeamIdTagsTagIdDeleteRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['customerTeamId'] == null) {
                throw new runtime.RequiredError('customerTeamId', 'Required parameter "customerTeamId" was null or undefined when calling customerTeamsCustomerTeamIdTagsTagIdDelete().');
            }
            if (requestParameters['tagId'] == null) {
                throw new runtime.RequiredError('tagId', 'Required parameter "tagId" was null or undefined when calling customerTeamsCustomerTeamIdTagsTagIdDelete().');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/customer-teams/{customer_team_id}/tags/{tag_id}`.replace(`{${"customer_team_id"}}`, encodeURIComponent(String(requestParameters['customerTeamId']))).replace(`{${"tag_id"}}`, encodeURIComponent(String(requestParameters['tagId']))),
                method: 'DELETE',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * customer-teams-customer-team-id-tags-tag-id-delete
     */
    customerTeamsCustomerTeamIdTagsTagIdDelete(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.customerTeamsCustomerTeamIdTagsTagIdDeleteRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * orders-order-id-tags-tag-id-delete
     */
    ordersOrderIdTagsTagIdDeleteRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['orderId'] == null) {
                throw new runtime.RequiredError('orderId', 'Required parameter "orderId" was null or undefined when calling ordersOrderIdTagsTagIdDelete().');
            }
            if (requestParameters['tagId'] == null) {
                throw new runtime.RequiredError('tagId', 'Required parameter "tagId" was null or undefined when calling ordersOrderIdTagsTagIdDelete().');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/orders/{order_id}/tags/{tag_id}`.replace(`{${"order_id"}}`, encodeURIComponent(String(requestParameters['orderId']))).replace(`{${"tag_id"}}`, encodeURIComponent(String(requestParameters['tagId']))),
                method: 'DELETE',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * orders-order-id-tags-tag-id-delete
     */
    ordersOrderIdTagsTagIdDelete(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.ordersOrderIdTagsTagIdDeleteRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * tags-post
     */
    tagsPostRaw(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/tags`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * tags-post
     */
    tagsPost(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.tagsPostRaw(initOverrides);
            return yield response.value();
        });
    }
    /**
     * tags-tag-id-put
     */
    tagsTagIdPutRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['tagId'] == null) {
                throw new runtime.RequiredError('tagId', 'Required parameter "tagId" was null or undefined when calling tagsTagIdPut().');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/tags/{tag_id}`.replace(`{${"tag_id"}}`, encodeURIComponent(String(requestParameters['tagId']))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * tags-tag-id-put
     */
    tagsTagIdPut(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.tagsTagIdPutRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
}
exports.TagsApi = TagsApi;
