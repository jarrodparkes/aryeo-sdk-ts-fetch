/* tslint:disable */
/* eslint-disable */
/**
 * Aryeo
 * # Introduction The Aryeo API provides access to the Aryeo platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: jarrodp@zillowgroup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * A user's email, password, and client type.
 * @export
 * @interface LoginPostPayload
 */
export interface LoginPostPayload {
    /**
     * If signing in as a customer user, the ID of company to sign in under.
     * @type {string}
     * @memberof LoginPostPayload
     */
    companyId?: string;
    /**
     * An email.
     * @type {string}
     * @memberof LoginPostPayload
     */
    email: string;
    /**
     * A password.
     * @type {string}
     * @memberof LoginPostPayload
     */
    password: string;
    /**
     * The type of client.
     * @type {string}
     * @memberof LoginPostPayload
     */
    client: LoginPostPayloadClientEnum;
}


/**
 * @export
 */
export const LoginPostPayloadClientEnum = {
    Ios: 'IOS',
    Android: 'ANDROID',
    Phpunit: 'PHPUNIT'
} as const;
export type LoginPostPayloadClientEnum = typeof LoginPostPayloadClientEnum[keyof typeof LoginPostPayloadClientEnum];


/**
 * Check if a given object implements the LoginPostPayload interface.
 */
export function instanceOfLoginPostPayload(value: object): value is LoginPostPayload {
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('password' in value) || value['password'] === undefined) return false;
    if (!('client' in value) || value['client'] === undefined) return false;
    return true;
}

export function LoginPostPayloadFromJSON(json: any): LoginPostPayload {
    return LoginPostPayloadFromJSONTyped(json, false);
}

export function LoginPostPayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): LoginPostPayload {
    if (json == null) {
        return json;
    }
    return {
        
        'companyId': json['company_id'] == null ? undefined : json['company_id'],
        'email': json['email'],
        'password': json['password'],
        'client': json['client'],
    };
}

export function LoginPostPayloadToJSON(json: any): LoginPostPayload {
    return LoginPostPayloadToJSONTyped(json, false);
}

export function LoginPostPayloadToJSONTyped(value?: LoginPostPayload | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'company_id': value['companyId'],
        'email': value['email'],
        'password': value['password'],
        'client': value['client'],
    };
}

