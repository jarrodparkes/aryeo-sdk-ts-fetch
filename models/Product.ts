/* tslint:disable */
/* eslint-disable */
/**
 * Aryeo
 * # Introduction The Aryeo API provides access to the Aryeo platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: jarrodp@zillowgroup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProductCategory } from './ProductCategory';
import {
    ProductCategoryFromJSON,
    ProductCategoryFromJSONTyped,
    ProductCategoryToJSON,
    ProductCategoryToJSONTyped,
} from './ProductCategory';
import type { ProductVariant } from './ProductVariant';
import {
    ProductVariantFromJSON,
    ProductVariantFromJSONTyped,
    ProductVariantToJSON,
    ProductVariantToJSONTyped,
} from './ProductVariant';

/**
 * A product available for purchase via an order.
 * @export
 * @interface Product
 */
export interface Product {
    /**
     * String representing the object's type. Objects of the same type share the same schema.
     * @type {string}
     * @memberof Product
     */
    object?: string;
    /**
     * ID of the product. UUID Version 4.
     * @type {string}
     * @memberof Product
     */
    id: string;
    /**
     * The title of the product.
     * @type {string}
     * @memberof Product
     */
    title: string;
    /**
     * The description of the product.
     * @type {string}
     * @memberof Product
     */
    description?: string;
    /**
     * The active status of a product.
     * @type {boolean}
     * @memberof Product
     */
    active?: boolean;
    /**
     * The type of product.
     * @type {string}
     * @memberof Product
     */
    type: ProductTypeEnum;
    /**
     * 
     * @type {Array<ProductVariant>}
     * @memberof Product
     */
    variants?: Array<ProductVariant>;
    /**
     * 
     * @type {Array<ProductCategory>}
     * @memberof Product
     */
    categories?: Array<ProductCategory>;
}


/**
 * @export
 */
export const ProductTypeEnum = {
    Main: 'MAIN',
    Addon: 'ADDON'
} as const;
export type ProductTypeEnum = typeof ProductTypeEnum[keyof typeof ProductTypeEnum];


/**
 * Check if a given object implements the Product interface.
 */
export function instanceOfProduct(value: object): value is Product {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function ProductFromJSON(json: any): Product {
    return ProductFromJSONTyped(json, false);
}

export function ProductFromJSONTyped(json: any, ignoreDiscriminator: boolean): Product {
    if (json == null) {
        return json;
    }
    return {
        
        'object': json['object'] == null ? undefined : json['object'],
        'id': json['id'],
        'title': json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'active': json['active'] == null ? undefined : json['active'],
        'type': json['type'],
        'variants': json['variants'] == null ? undefined : ((json['variants'] as Array<any>).map(ProductVariantFromJSON)),
        'categories': json['categories'] == null ? undefined : ((json['categories'] as Array<any>).map(ProductCategoryFromJSON)),
    };
}

export function ProductToJSON(json: any): Product {
    return ProductToJSONTyped(json, false);
}

export function ProductToJSONTyped(value?: Product | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'object': value['object'],
        'id': value['id'],
        'title': value['title'],
        'description': value['description'],
        'active': value['active'],
        'type': value['type'],
        'variants': value['variants'] == null ? undefined : ((value['variants'] as Array<any>).map(ProductVariantToJSON)),
        'categories': value['categories'] == null ? undefined : ((value['categories'] as Array<any>).map(ProductCategoryToJSON)),
    };
}

