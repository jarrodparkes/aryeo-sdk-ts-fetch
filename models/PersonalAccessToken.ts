/* tslint:disable */
/* eslint-disable */
/**
 * Aryeo
 * # Introduction The Aryeo API provides access to the Aryeo platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: jarrodp@zillowgroup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Group } from './Group';
import {
    GroupFromJSON,
    GroupFromJSONTyped,
    GroupToJSON,
    GroupToJSONTyped,
} from './Group';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
    UserToJSONTyped,
} from './User';

/**
 * A personal access token, its user, and the it's users group (if applicable).
 * @export
 * @interface PersonalAccessToken
 */
export interface PersonalAccessToken {
    /**
     * Authorization token for a user.
     * @type {string}
     * @memberof PersonalAccessToken
     */
    token: string;
    /**
     * 
     * @type {User}
     * @memberof PersonalAccessToken
     */
    user: User;
    /**
     * 
     * @type {Group}
     * @memberof PersonalAccessToken
     */
    group?: Group;
}

/**
 * Check if a given object implements the PersonalAccessToken interface.
 */
export function instanceOfPersonalAccessToken(value: object): value is PersonalAccessToken {
    if (!('token' in value) || value['token'] === undefined) return false;
    if (!('user' in value) || value['user'] === undefined) return false;
    return true;
}

export function PersonalAccessTokenFromJSON(json: any): PersonalAccessToken {
    return PersonalAccessTokenFromJSONTyped(json, false);
}

export function PersonalAccessTokenFromJSONTyped(json: any, ignoreDiscriminator: boolean): PersonalAccessToken {
    if (json == null) {
        return json;
    }
    return {
        
        'token': json['token'],
        'user': UserFromJSON(json['user']),
        'group': json['group'] == null ? undefined : GroupFromJSON(json['group']),
    };
}

export function PersonalAccessTokenToJSON(json: any): PersonalAccessToken {
    return PersonalAccessTokenToJSONTyped(json, false);
}

export function PersonalAccessTokenToJSONTyped(value?: PersonalAccessToken | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'token': value['token'],
        'user': UserToJSON(value['user']),
        'group': GroupToJSON(value['group']),
    };
}

