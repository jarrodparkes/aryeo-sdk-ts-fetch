/* tslint:disable */
/* eslint-disable */
/**
 * Aryeo
 * # Introduction The Aryeo API provides access to the Aryeo platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: jarrodp@zillowgroup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * A 3D virtual tour.
 * @export
 * @interface InteractiveContent
 */
export interface InteractiveContent {
    /**
     * ID of the content. UUID Version 4.
     * @type {string}
     * @memberof InteractiveContent
     */
    id: string;
    /**
     * The title of the interactive content given by the uploading user.
     * @type {string}
     * @memberof InteractiveContent
     */
    title?: string | null;
    /**
     * Is the content branded, unbranded, or both?
     * @type {string}
     * @memberof InteractiveContent
     */
    displayType: InteractiveContentDisplayTypeEnum;
    /**
     * The type of interactive content.
     * @type {string}
     * @memberof InteractiveContent
     */
    contentType: InteractiveContentContentTypeEnum;
    /**
     * URL for the content.
     * @type {string}
     * @memberof InteractiveContent
     */
    url: string;
    /**
     * A URL for a thumbnail-sized preview of the content.
     * @type {string}
     * @memberof InteractiveContent
     */
    thumbnailUrl?: string | null;
}


/**
 * @export
 */
export const InteractiveContentDisplayTypeEnum = {
    Branded: 'BRANDED',
    Unbranded: 'UNBRANDED',
    Both: 'BOTH'
} as const;
export type InteractiveContentDisplayTypeEnum = typeof InteractiveContentDisplayTypeEnum[keyof typeof InteractiveContentDisplayTypeEnum];

/**
 * @export
 */
export const InteractiveContentContentTypeEnum = {
    Matterport: 'MATTERPORT',
    Other: 'OTHER'
} as const;
export type InteractiveContentContentTypeEnum = typeof InteractiveContentContentTypeEnum[keyof typeof InteractiveContentContentTypeEnum];


/**
 * Check if a given object implements the InteractiveContent interface.
 */
export function instanceOfInteractiveContent(value: object): value is InteractiveContent {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('displayType' in value) || value['displayType'] === undefined) return false;
    if (!('contentType' in value) || value['contentType'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    return true;
}

export function InteractiveContentFromJSON(json: any): InteractiveContent {
    return InteractiveContentFromJSONTyped(json, false);
}

export function InteractiveContentFromJSONTyped(json: any, ignoreDiscriminator: boolean): InteractiveContent {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'] == null ? undefined : json['title'],
        'displayType': json['display_type'],
        'contentType': json['content_type'],
        'url': json['url'],
        'thumbnailUrl': json['thumbnail_url'] == null ? undefined : json['thumbnail_url'],
    };
}

export function InteractiveContentToJSON(json: any): InteractiveContent {
    return InteractiveContentToJSONTyped(json, false);
}

export function InteractiveContentToJSONTyped(value?: InteractiveContent | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'title': value['title'],
        'display_type': value['displayType'],
        'content_type': value['contentType'],
        'url': value['url'],
        'thumbnail_url': value['thumbnailUrl'],
    };
}

