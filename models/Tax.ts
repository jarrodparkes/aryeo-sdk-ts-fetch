/* tslint:disable */
/* eslint-disable */
/**
 * Aryeo
 * # Introduction The Aryeo API provides access to the Aryeo platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: jarrodp@zillowgroup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TaxRate } from './TaxRate';
import {
    TaxRateFromJSON,
    TaxRateFromJSONTyped,
    TaxRateToJSON,
    TaxRateToJSONTyped,
} from './TaxRate';

/**
 * A tax represents the application of a tax rate to a taxed entity, such as an order or order item. 
 * @export
 * @interface Tax
 */
export interface Tax {
    /**
     * String representing the object's type.
     * @type {string}
     * @memberof Tax
     */
    object: string;
    /**
     * ID of the tax. UUID Version 4.
     * @type {string}
     * @memberof Tax
     */
    id: string;
    /**
     * A positive integer in the smallest currency unit (that is, 100 cents for $1.00) representing the total calculated tax for this tax rate for all applicable order items.
     * @type {number}
     * @memberof Tax
     */
    totalTaxAmount?: number;
    /**
     * A decimal value representing the rate of the parent tax rate at the time of this tax application. For example, 0.075 would represent an applied tax percentage of 7.5%.
     * @type {number}
     * @memberof Tax
     */
    appliedRate?: number;
    /**
     * 
     * @type {TaxRate}
     * @memberof Tax
     */
    taxRate?: TaxRate;
}

/**
 * Check if a given object implements the Tax interface.
 */
export function instanceOfTax(value: object): value is Tax {
    if (!('object' in value) || value['object'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function TaxFromJSON(json: any): Tax {
    return TaxFromJSONTyped(json, false);
}

export function TaxFromJSONTyped(json: any, ignoreDiscriminator: boolean): Tax {
    if (json == null) {
        return json;
    }
    return {
        
        'object': json['object'],
        'id': json['id'],
        'totalTaxAmount': json['total_tax_amount'] == null ? undefined : json['total_tax_amount'],
        'appliedRate': json['applied_rate'] == null ? undefined : json['applied_rate'],
        'taxRate': json['tax_rate'] == null ? undefined : TaxRateFromJSON(json['tax_rate']),
    };
}

export function TaxToJSON(json: any): Tax {
    return TaxToJSONTyped(json, false);
}

export function TaxToJSONTyped(value?: Tax | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'object': value['object'],
        'id': value['id'],
        'total_tax_amount': value['totalTaxAmount'],
        'applied_rate': value['appliedRate'],
        'tax_rate': TaxRateToJSON(value['taxRate']),
    };
}

