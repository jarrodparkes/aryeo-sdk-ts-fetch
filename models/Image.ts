/* tslint:disable */
/* eslint-disable */
/**
 * Aryeo
 * # Introduction The Aryeo API provides access to the Aryeo platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: jarrodp@zillowgroup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * A visual representation of something.
 * @export
 * @interface Image
 */
export interface Image {
    /**
     * ID of the image. UUID Version 4.
     * @type {string}
     * @memberof Image
     */
    id: string;
    /**
     * A URL for a thumbnail-sized version of the image.
     * @type {string}
     * @memberof Image
     */
    thumbnailUrl: string;
    /**
     * A URL for a large version of the image.
     * @type {string}
     * @memberof Image
     */
    largeUrl: string;
    /**
     * The name of the file.
     * @type {string}
     * @memberof Image
     */
    filename: string;
    /**
     * A URL for the original, full-resolution version of the image. Useful for downloading.
     * @type {string}
     * @memberof Image
     */
    originalUrl: string;
    /**
     * The order in which the image should be displayed amongst other related images.
     * @type {number}
     * @memberof Image
     */
    index?: number | null;
    /**
     * A brief explanation of the image.
     * @type {string}
     * @memberof Image
     */
    caption?: string | null;
    /**
     * Should the image be displayed in a gallery?
     * @type {boolean}
     * @memberof Image
     */
    displayInGallery: boolean;
}

/**
 * Check if a given object implements the Image interface.
 */
export function instanceOfImage(value: object): value is Image {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('thumbnailUrl' in value) || value['thumbnailUrl'] === undefined) return false;
    if (!('largeUrl' in value) || value['largeUrl'] === undefined) return false;
    if (!('filename' in value) || value['filename'] === undefined) return false;
    if (!('originalUrl' in value) || value['originalUrl'] === undefined) return false;
    if (!('displayInGallery' in value) || value['displayInGallery'] === undefined) return false;
    return true;
}

export function ImageFromJSON(json: any): Image {
    return ImageFromJSONTyped(json, false);
}

export function ImageFromJSONTyped(json: any, ignoreDiscriminator: boolean): Image {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'thumbnailUrl': json['thumbnail_url'],
        'largeUrl': json['large_url'],
        'filename': json['filename'],
        'originalUrl': json['original_url'],
        'index': json['index'] == null ? undefined : json['index'],
        'caption': json['caption'] == null ? undefined : json['caption'],
        'displayInGallery': json['display_in_gallery'],
    };
}

export function ImageToJSON(json: any): Image {
    return ImageToJSONTyped(json, false);
}

export function ImageToJSONTyped(value?: Image | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'thumbnail_url': value['thumbnailUrl'],
        'large_url': value['largeUrl'],
        'filename': value['filename'],
        'original_url': value['originalUrl'],
        'index': value['index'],
        'caption': value['caption'],
        'display_in_gallery': value['displayInGallery'],
    };
}

